@import "../../../../styles/helpers/all";

:host {
  contain: content;
  display: inline-block;
  position: relative;
  min-height: $portfolio-item-max-width / $portfolio-item-width-height-ratio - 1px;
  margin: 16px 16px 0 0;
  overflow: hidden;
  border-radius: 2px;
  box-shadow: 0 0 0 1px transparentize(black, .88);
  cursor: pointer;

  @include transition-only-for(.28s, (box-shadow), .0s, cubic-bezier(0.4, 0, 0.2, 1));

  &:hover {
    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),
      0 1px 10px 0 rgba(0, 0, 0, 0.12),
      0 2px 4px -1px rgba(0, 0, 0, 0.4);
  }

  @for $i from 1 through 100 {
    [grid-columns="#{$i}"] & {
      width: calc((100% - (32px * (#{$i} - 1))) / #{$i});
    }
  }

  @include media-query(lt-xs) {
    margin: 16px 0 0 0;
  }
}

@include bem(portfolio-item) {
  @extend %ab-layer-block;

  @include bem-element(inner) {
    @extend %ab-layer-block;
    background: white;
  }

  @include bem-element(background-protector) {
    @extend %ab-layer-absolute-fill;
    opacity: 0;
    @include transition-only-for(1s, (opacity));

    &.loaded {
      opacity: 1;
    }
  }

  @include bem-element(text-layout) {
    @extend %ab-layer-absolute-fill;
    width: calc(100% - 88px);
    padding: 24px 0 24px 24px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    font-family: merge-fonts-stack('Ubuntu', $fonts-stack);

    @include media-query(lt-xs) {
      width: calc(100% - 20px);
    }
  }

  @include bem-element(title) {
    display: inline-block;
    font-size: $portfolio-item-title-font-size;
    color: inherit;
    font-weight: 500;
    padding-bottom: 6px;
    line-height: 1.1em;

    &:hover {
      text-decoration: underline;
    }
  }

  @include bem-element(subtitle) {
    font-size: $portfolio-item-subtitle-font-size;
    color: inherit;
    opacity: .9;
    padding: 0 0 10px 2px;
    font-style: italic;
  }

  @include bem-element(title-delimiter) {
    width: 90px;
    height: 4px;
    min-height: 4px;
    background: white;
  }

  @include bem-element(short-description) {
    font-size: $portfolio-item-short-description-font-size;
    opacity: .9;
    margin-top: 10px;
  }

  @include bem-element(image) {
    height: 100%;
    /deep/ {
      div, img {
        height: 100%;
      }
      img {
        object-fit: cover;
      }
    }
  }

  /* Mock Item */
  @include bem-element(mock-inner) {
    @extend %ab-layer-block;
    overflow: hidden;
    background: white;
  }

  @include bem-element(mock-text-layout) {
    @extend %ab-layer-absolute-fill;
    width: calc(100% - 88px);
    padding: 24px 0 24px 24px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;

    @include media-query(lt-xs) {
      width: calc(100% - 20px);
    }
  }

  @include bem-element(mock-title) {
    display: inline-block;
    margin-bottom: 26px;
    line-height: 1.1em;

    @include mock-text($portfolio-mock-item-color, $portfolio-item-title-font-size / 1.1, 40%);
  }

  @include bem-element(mock-subtitle) {
    margin: 0 0 20px;
    @include mock-text($portfolio-mock-item-color, $portfolio-item-subtitle-font-size / 1.2, 70%);
  }

  @include bem-element(mock-title-delimiter) {
    width: 90px;
    height: 4px;
    min-height: 4px;
    background: $portfolio-mock-item-color;
  }

  @include bem-element(mock-short-description) {
    margin-top: 10px;
    @include mock-text($portfolio-mock-item-color, $portfolio-item-short-description-font-size / 2);

    &:nth-of-type(4) {
      width: 100%;
      margin-top: 20px;
    }
    &:nth-of-type(5) {
      width: 80%;
    }
    &:last-of-type {
      width: 60%;
    }
  }

  @include bem-element(mock-animation-mask) {
    @extend %ab-layer-absolute-fill;
    z-index: 101;
    background-image: linear-gradient(to right, rgba(255, 255, 255, .0) 0%, rgba(255, 255, 255, .4) 20%, rgba(255, 255, 255, .6) 40%, rgba(255, 255, 255, .0) 100%);
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-name: placeHolderShimmer;
    animation-timing-function: linear;

    @keyframes placeHolderShimmer {
      0% { transform: translateX(-468px) }
      100%{ transform:translateX(468px) }
    }
  }
}